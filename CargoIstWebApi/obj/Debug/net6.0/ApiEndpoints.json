[
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "GetAllAddressesAsync",
    "RelativePath": "api/addresses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "GetOneAddressByIdAsync",
    "RelativePath": "api/addresses/address",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "GetOneAddressWithCustomerIdAsync",
    "RelativePath": "api/addresses/addressByCustomer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addressId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "GetAllAddressesWithBranchId",
    "RelativePath": "api/addresses/branch",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branchId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "CreateOneAddressBanchAsync",
    "RelativePath": "api/addresses/BranchId",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branchId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "addressDto",
        "Type": "Entities.DTO_s.AddressDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "GetAllAddressesWithCustomerId",
    "RelativePath": "api/addresses/customer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "CreateOneAddressAsync",
    "RelativePath": "api/addresses/CustomerId",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "addressDto",
        "Type": "Entities.DTO_s.AddressDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "GetAllAddressesWithCustomerMobilId",
    "RelativePath": "api/addresses/customerMobil",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerMobilId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "CreateOneAddressMobilAsync",
    "RelativePath": "api/addresses/CustomerMobilId",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerMobilId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "addressDto",
        "Type": "Entities.DTO_s.AddressDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "DeleteOneAddressAsync",
    "RelativePath": "api/addresses/deleteAddress",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AddressController",
    "Method": "UpdateOneAddressAsync",
    "RelativePath": "api/addresses/updateAddress",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "addressDto",
        "Type": "Entities.DTO_s.AddressDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "RegisterUser",
    "RelativePath": "api/authentication",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userForRegistraitonDto",
        "Type": "Entities.DTO_s.Auth.UserForRegistrationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "DeleteUser",
    "RelativePath": "api/authentication/delete",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Entities.DTO_s.Auth.UserForAuthenticationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Authenticate",
    "RelativePath": "api/authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Entities.DTO_s.Auth.UserForAuthenticationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Refresh",
    "RelativePath": "api/authentication/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenDto",
        "Type": "Entities.DTO_s.Auth.TokenDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BranchController",
    "Method": "GetAllBranchesAsync",
    "RelativePath": "api/branch",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BranchController",
    "Method": "CreateOneBranchAsync",
    "RelativePath": "api/branch",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branchDto",
        "Type": "Entities.DTO_s.Branch.BranchDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BranchController",
    "Method": "GetOneBranchAsync",
    "RelativePath": "api/branch/BranchId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BranchController",
    "Method": "DeleteOneBranchAsync",
    "RelativePath": "api/branch/DeleteBranchId",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BranchController",
    "Method": "UpdateOneBranchAsync",
    "RelativePath": "api/branch/UpdateBranchId",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "branchDto",
        "Type": "Entities.DTO_s.Branch.BranchDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CallCourierController",
    "Method": "GetAllCourierAsync",
    "RelativePath": "api/callcourier",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CallCourierController",
    "Method": "GetOneCallCourierWithById",
    "RelativePath": "api/callcourier/CallCourierId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "callCourierId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CallCourierController",
    "Method": "CreateOneCallCourier",
    "RelativePath": "api/callcourier/CreateOneCallCourier",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "callCourierDto",
        "Type": "Entities.DTO_s.CallCourier.CallCourierDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CallCourierController",
    "Method": "DeleteOneCallCourier",
    "RelativePath": "api/callcourier/DeleteCallCourierId",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CallCourierController",
    "Method": "GetAllCourierWithByTcnoAsync",
    "RelativePath": "api/callcourier/TcNo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tcNo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CallCourierController",
    "Method": "UpdateOneCallCourier",
    "RelativePath": "api/callcourier/UpdateCallCourierId",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "callCourierDto",
        "Type": "Entities.DTO_s.CallCourier.CallCourierDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoController",
    "Method": "GetAllCargoAsync",
    "RelativePath": "api/cargo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoController",
    "Method": "CreateOneCargo",
    "RelativePath": "api/cargo",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Cargo",
        "Type": "Entities.DTO_s.Cargo.CargoDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoController",
    "Method": "UpdateOneCustomerAsync",
    "RelativePath": "api/cargo/CargoId",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "cargoDto",
        "Type": "Entities.DTO_s.Cargo.CargoDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoController",
    "Method": "GetAllCargoWithTcNoAsync",
    "RelativePath": "api/cargo/GetAllCargoWithTcNo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tcNo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoController",
    "Method": "GetOneCargoWithId",
    "RelativePath": "api/cargo/GetOneCargoWithId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoController",
    "Method": "GetOneCargoWithTrackingNoAsync",
    "RelativePath": "api/cargo/GetOneCargoWithTrackingNo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "trackingNo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoMovementController",
    "Method": "GetAllCargoMovementsAsync",
    "RelativePath": "api/cargomovement",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoMovementController",
    "Method": "CreateOneCargoMovementAsync",
    "RelativePath": "api/cargomovement",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cargoMovementDto",
        "Type": "Entities.DTO_s.CargoStatus.CargoMovementDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoMovementController",
    "Method": "GetOneCargoMovementWithCargoByIdAsync",
    "RelativePath": "api/cargomovement/CargoId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoMovementController",
    "Method": "GetOneCargoMovementByIdAsync",
    "RelativePath": "api/cargomovement/CargoMovementId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoMovementController",
    "Method": "DeleteOneBranchAsync",
    "RelativePath": "api/cargomovement/DeleteCargoMovementId",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoMovementController",
    "Method": "UpdateOneBranchAsync",
    "RelativePath": "api/cargomovement/UpdateCargoMovementId",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "cargoMovementDto",
        "Type": "Entities.DTO_s.CargoStatus.CargoMovementDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoParcelTypeController",
    "Method": "GetAllCargoParcelTypeAsync",
    "RelativePath": "api/cargoparceltype",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoStatusController",
    "Method": "GetAllCargoStatusAsync",
    "RelativePath": "api/cargostatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoTransportationConditionsController",
    "Method": "GetAllCargoTransportationConditionsAsync",
    "RelativePath": "api/cargotrancon",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CargoTypeController",
    "Method": "GetAllCargoTypeAsync",
    "RelativePath": "api/cargotype",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CountryController",
    "Method": "GetAllCountriesAsync",
    "RelativePath": "api/country",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "GetAllCustomerMobilAsync",
    "RelativePath": "api/customerMobil",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "CreateOneCustomerMobilAsync",
    "RelativePath": "api/customerMobil",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerDto",
        "Type": "Entities.DTO_s.CustomerMobil.CustomerMobilDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "ForgotPasswordCustomerMobil",
    "RelativePath": "api/customerMobil/ForgotPassword",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Tcno",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "newPassword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "GetCustomerIdWithAddress",
    "RelativePath": "api/customerMobil/GetCustomerIdWithAdress",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "GetOneCustomerMobilAsync",
    "RelativePath": "api/customerMobil/GetOneCustomerId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "UpdateOneCustomerAsync",
    "RelativePath": "api/customerMobil/id",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "customerDto",
        "Type": "Entities.DTO_s.CustomerMobil.CustomerMobilDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "DeleteOneCustomerAsync",
    "RelativePath": "api/customerMobil/id",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "PartiallyUpdateOneCustomerMobilAsync",
    "RelativePath": "api/customerMobil/id",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "customerPatch",
        "Type": "Microsoft.AspNetCore.JsonPatch.Operations.Operation[]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "UserLogin",
    "RelativePath": "api/customerMobil/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "Presentation.Controllers.CustomerMobilController\u002BLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerMobilController",
    "Method": "UpdateCustomerMobilPassword",
    "RelativePath": "api/customerMobil/UpdatePassword",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerMobilId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "oldPassword",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "newPassword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "GetAllCustomersAsync",
    "RelativePath": "api/customers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "CreateOneCustomerAsync",
    "RelativePath": "api/customers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerDto",
        "Type": "Entities.DTO_s.CustomerDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "GetOneCustomersAsync",
    "RelativePath": "api/customers/CustomerId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "UpdateOneCustomerAsync",
    "RelativePath": "api/customers/CustomerId",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "customerDto",
        "Type": "Entities.DTO_s.CustomerDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "DeleteOneCustomerAsync",
    "RelativePath": "api/customers/CustomerId",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "PartiallyUpdateOneCustomerAsync",
    "RelativePath": "api/customers/CustomerId",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "customerPatch",
        "Type": "Microsoft.AspNetCore.JsonPatch.Operations.Operation[]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CustomerController",
    "Method": "GetCustomerTCNoWithAddress",
    "RelativePath": "api/customers/TcNo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tcNo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.DistrictController",
    "Method": "GetAllDistrictAsync",
    "RelativePath": "api/district",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "GetAllEmployeeAsync",
    "RelativePath": "api/employee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "CreateOneEmployeeAsync",
    "RelativePath": "api/employee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeDto",
        "Type": "Entities.DTO_s.Employee.EmployeeDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "GetCargoesByEmployeeId",
    "RelativePath": "api/employee/EmployeeId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EmployeeId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "GetCargoesOkByEmployeeId",
    "RelativePath": "api/employee/EmployeeIdOk",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EmployeeIdOk",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "GetOneEmployeeAsync",
    "RelativePath": "api/employee/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "UpdateOneEmployeeAsync",
    "RelativePath": "api/employee/id",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "employeeDto",
        "Type": "Entities.DTO_s.Employee.EmployeeDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "DeleteOneemployeeAsync",
    "RelativePath": "api/employee/id",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "UserLoginEmployee",
    "RelativePath": "api/employee/loginEmployee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "Presentation.Controllers.EmployeeController\u002BLoginRequestEmployee",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeController",
    "Method": "GetEmployeeWithTcNo",
    "RelativePath": "api/employee/TcNo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tcNo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.EmployeeTypeController",
    "Method": "GetAllEmployeeTypeAsync",
    "RelativePath": "api/employeetype",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NeighbourhoodController",
    "Method": "GetAllNeighbourhoodsAsync",
    "RelativePath": "api/neighbourhood",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "DistrictId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PaymentTypeController",
    "Method": "GetAllPaymentTypeAsync",
    "RelativePath": "api/paymenttype",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ProvinceController",
    "Method": "GetAllProvincesAsync",
    "RelativePath": "api/province",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "GetAllReceiversAsync",
    "RelativePath": "api/receiver",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "CreateOneReceiverAsync",
    "RelativePath": "api/receiver",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "receiverDto",
        "Type": "Entities.DTO_s.Receiver.ReceiverDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "GetAllReceiversWithCustomerId",
    "RelativePath": "api/receiver/CustomerId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "GetAllReceiversWithCustomerMobilId",
    "RelativePath": "api/receiver/CustomerMobilId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerMobilId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "DeleteInactiveReceivers",
    "RelativePath": "api/receiver/deleteInactiveReceivers",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "GetOneReceiverAsync",
    "RelativePath": "api/receiver/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "UpdateOneReceiverAsync",
    "RelativePath": "api/receiver/id",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "receiverDto",
        "Type": "Entities.DTO_s.Receiver.ReceiverDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReceiverController",
    "Method": "DeleteOneReceiverAsync",
    "RelativePath": "api/receiver/id",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]